<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.CustomerDao">
    <!--用到了User别名-->
    <resultMap type="Customer" id="UserResult">
        <!--注意这里column属性的字段名,和sql语句查询列定义的别名一致才可以自定映射比配注入-->
        <id column="id_" jdbcType="INTEGER" property="id"/>
        <result column="username_" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
    </resultMap>

    <sql id="query_Customer_where">
        <if test="customer.user!=null">
            <if test="customer.user.username!=null and customer.user.username!=''">
                AND username LIKE '%${customer.user.username}%'
            </if>
            <if test="customer.user.password!=null and customer.user.password!=''">
                AND password = #{customer.user.password}
            </if>
        </if>
    </sql>

    <select id="findCustomerById" parameterType="int" resultMap="UserResult">
        SELECT id id_,username username_ FROM customer where id = #{id}
    </select>

    <select id="findCustomerByCustomer" parameterType="Customer" resultType="Customer">
        SELECT * FROM customer
        <where><!-- where 1=1 -->
            <if test="customer.user != null"><!--用到java属性进行判断的地方,全名称引用避免参数找不到错误-->
                <if test="customer.user.password != null and customer.user.password != ''">
                    AND password = #{customer.user.password}
                </if>
                <if test="customer.user.username !=null and customer.user.username !=''">
                    AND username LIKE '%${customer.user.username}%'<!--自动忽略第一个通过条件判断接入的sql语句的 'and' 拼接前缀。-->
                </if>
            </if>
        </where>
    </select>
<!--
    <select id="findCustomerByCustomer" parameterType="Customer" resultType="Customer">
        SELECT * FROM customer
        <where>
            <include refid="query_Customer_where"/>
               // <include refid="query_Customer_where"></include> ====== 标签体中不含内容的标签可直接使用单标签关闭
        </where>
    </select>
-->

    <select id="findCustomerByIdList" parameterType="list" resultType="Customer">
      SELECT * FROM customer
        <where>
            <if test="list!=null">
                <!-- 使用 foreach遍历传入ids
                   collection：指定输入 对象中集合属性
                   item：每个遍历生成对象中
                   open：开始遍历时拼接的串
                   close：结束遍历时拼接的串
                   separator：遍历的两个对象中需要拼接的串
                -->

                <!-- 使用实现下边的sql拼接：
                 AND (id=1 OR id=10 OR id=16)
                 -->

                <foreach collection="list" item="id" open="AND (" close=")" separator="or">
                    <!-- 每个遍历需要拼接的串 -->
                    id=#{id}
                </foreach>

                <!-- 实现  “ and id IN(1,10,16)”拼接 -->
                <!-- <foreach collection="ids" item="user_id" open="and id IN(" close=")" separator=",">
                    每个遍历需要拼接的串
                    #{user_id}
                </foreach> -->
            </if>
        </where>
    </select>
</mapper>
