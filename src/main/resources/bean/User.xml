<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">
    <!--用到了User别名-->
    <resultMap type="bean.User" id="UserResult">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
    </resultMap>

    <select id="findUserById" parameterType="int" resultMap="UserResult"><!--使用resultType需要数据库中的字段与bean实体类中的属性名一致-->
    SELECT * FROM user WHERE id = #{id:INTEGER}
  </select>

    <select id="findUserByUsername" parameterType="java.lang.String" resultType="bean.User">
        SELECT * FROM user WHERE username LIKE '%${value}%'<!--parameterType传输单个简单类型值,${}括号中只能是value。-->
    </select>

    <insert id="insertUser" parameterType="bean.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO USER (username,password)
        VALUES (#{username},#{password})
    </insert>

    <delete id="delete" parameterType="bean.User">
        DELETE FROM user WHERE id = #{id:INTEGER}
    </delete>

    <insert id="insert" parameterType="bean.User" useGeneratedKeys="false">
        INSERT INTO user
        ( id,
        username,
        password,
        administrator
        )
        VALUES
        ( #{id},
        #{username,jdbcType=VARCHAR},
        #{password.encrypted:VARCHAR},
        #{administrator,jdbcType=BOOLEAN}
        )
    </insert>

    <update id="update" parameterType="bean.User">
        UPDATE user SET
        username = #{username,jdbcType=VARCHAR},
        password = #{password.encrypted,jdbcType=VARCHAR},
        administrator = #{administrator,jdbcType=BOOLEAN}
        WHERE
        id = #{id,jdbcType=INTEGER}
    </update>

    <!--   Unique constraint check -->
    <select id="isUniqueUsername" parameterType="map" resultType="boolean">
        SELECT (count(*) = 0)
        FROM user
        WHERE ((#{userId,jdbcType=BIGINT} IS NOT NULL AND id != #{userId,jdbcType=BIGINT}) OR #{userId,jdbcType=BIGINT}
        IS
        NULL)  <!-- other than me -->
        AND (username = #{username,jdbcType=VARCHAR})
    </select>

</mapper>
